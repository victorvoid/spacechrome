{:rename-macros {}, :renames {}, :externs {console {log {}}, Object {}}, :use-macros {log chromex.logging, go cljs.core.async.macros, group chromex.logging, go-loop cljs.core.async.macros, warn chromex.logging, group-end chromex.logging, info chromex.logging, error chromex.logging}, :excludes #{}, :name chromex-sample.background.core, :imports nil, :requires {chromex.ext.runtime chromex.ext.runtime, chromex.protocols chromex.protocols, gstring goog.string, chromex.chrome-event-channel chromex.chrome-event-channel, goog.string goog.string, chromex-sample.background.storage chromex-sample.background.storage, chromex.logging chromex.logging, tabs chromex.ext.tabs, cljs.core.async cljs.core.async, goog.string.format goog.string.format, chromex.ext.tabs chromex.ext.tabs, runtime chromex.ext.runtime}, :uses {<! cljs.core.async, chan cljs.core.async, test-storage! chromex-sample.background.storage, get-sender chromex.protocols, make-chrome-event-channel chromex.chrome-event-channel, post-message! chromex.protocols}, :defs {process-chrome-event {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/spacechrome/src/background/chromex_sample/background/core.cljs", :line 48, :column 7, :end-line 48, :end-column 27, :arglists (quote ([event-num event]))}, :name chromex-sample.background.core/process-chrome-event, :variadic false, :file "src/background/chromex_sample/background/core.cljs", :end-column 27, :method-params ([event-num event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 2, :fn-var true, :arglists (quote ([event-num event]))}, add-client! {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/spacechrome/src/background/chromex_sample/background/core.cljs", :line 17, :column 7, :end-line 17, :end-column 18, :arglists (quote ([client]))}, :name chromex-sample.background.core/add-client!, :variadic false, :file "src/background/chromex_sample/background/core.cljs", :end-column 18, :method-params ([client]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([client]))}, init! {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/spacechrome/src/background/chromex_sample/background/core.cljs", :line 72, :column 7, :end-line 72, :end-column 12, :arglists (quote ([]))}, :name chromex-sample.background.core/init!, :variadic false, :file "src/background/chromex_sample/background/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, remove-client! {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/spacechrome/src/background/chromex_sample/background/core.cljs", :line 21, :column 7, :end-line 21, :end-column 21, :arglists (quote ([client]))}, :name chromex-sample.background.core/remove-client!, :variadic false, :file "src/background/chromex_sample/background/core.cljs", :end-column 21, :method-params ([client]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([client]))}, clients {:name chromex-sample.background.core/clients, :file "src/background/chromex_sample/background/core.cljs", :line 13, :column 1, :end-line 13, :end-column 13, :meta {:file "/home/victormartins/Documents/my-repositories-gh/spacechrome/src/background/chromex_sample/background/core.cljs", :line 13, :column 6, :end-line 13, :end-column 13}, :tag any}, run-client-message-loop! {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/spacechrome/src/background/chromex_sample/background/core.cljs", :line 28, :column 7, :end-line 28, :end-column 31, :arglists (quote ([client]))}, :name chromex-sample.background.core/run-client-message-loop!, :variadic false, :file "src/background/chromex_sample/background/core.cljs", :end-column 31, :method-params ([client]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([client]))}, boot-chrome-event-loop! {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/spacechrome/src/background/chromex_sample/background/core.cljs", :line 64, :column 7, :end-line 64, :end-column 30, :arglists (quote ([]))}, :name chromex-sample.background.core/boot-chrome-event-loop!, :variadic false, :file "src/background/chromex_sample/background/core.cljs", :end-column 30, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, run-chrome-event-loop! {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/spacechrome/src/background/chromex_sample/background/core.cljs", :line 56, :column 7, :end-line 56, :end-column 29, :arglists (quote ([chrome-event-channel]))}, :name chromex-sample.background.core/run-chrome-event-loop!, :variadic false, :file "src/background/chromex_sample/background/core.cljs", :end-column 29, :method-params ([chrome-event-channel]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists (quote ([chrome-event-channel]))}, tell-clients-about-new-tab! {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/spacechrome/src/background/chromex_sample/background/core.cljs", :line 42, :column 7, :end-line 42, :end-column 34, :arglists (quote ([]))}, :name chromex-sample.background.core/tell-clients-about-new-tab!, :variadic false, :file "src/background/chromex_sample/background/core.cljs", :end-column 34, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, handle-client-connection! {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/spacechrome/src/background/chromex_sample/background/core.cljs", :line 37, :column 7, :end-line 37, :end-column 32, :arglists (quote ([client]))}, :name chromex-sample.background.core/handle-client-connection!, :variadic false, :file "src/background/chromex_sample/background/core.cljs", :end-column 32, :method-params ([client]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([client]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, chromex.logging chromex.logging, tabs chromex.ext.tabs, chromex.ext.tabs chromex.ext.tabs, runtime chromex.ext.runtime, chromex.ext.runtime chromex.ext.runtime}, :cljs.analyzer/constants {:seen #{:else :recur}, :order [:recur :else]}, :doc nil}